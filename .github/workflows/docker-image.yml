name: Built and Push Docker Image

on:
  push:
    branches: ['product']
  pull_request:
    branches: ['product']

jobs:
  # build-client:
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_REPOSITORY: thanhtruong869 # name of Docker Hub ID
  #     IMAGE_NAME: client-phongtro-app
  #     IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Build Docker Image
  #       run: docker build ./client/ --file ./client/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

  #     - name: Check images
  #       run: docker images

  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       continue-on-error: true
  #       with:
  #         image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
  #         format: 'table'
  #         exit-code: '1'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'MEDIUM,HIGH,CRITICAL'

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

  #     - name: Push Image to Docker Hub
  #       run: docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

  # build-api:
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_REPOSITORY: thanhtruong869 # name of Docker Hub ID
  #     IMAGE_NAME: api-phongtro-app
  #     IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Build Docker Image
  #       run: docker build ./server/ --file ./server/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

  #     - name: Check images
  #       run: docker images

  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       continue-on-error: true
  #       with:
  #         image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
  #         format: 'table'
  #         exit-code: '1'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'MEDIUM,HIGH,CRITICAL'

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

  #     - name: Push Image to Docker Hub
  #       run: docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

  # build-nginx-phongtro:
  #   runs-on: ubuntu-latest
  #   env:
  #     DOCKER_REPOSITORY: thanhtruong869 # name of Docker Hub ID
  #     IMAGE_NAME: nginx-phongtro-app
  #     IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Build Docker Image
  #       run: docker build ./nginx/ --file ./nginx/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

  #     - name: Check images
  #       run: docker images

  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       continue-on-error: true
  #       with:
  #         image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
  #         format: 'table'
  #         exit-code: '1'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'MEDIUM,HIGH,CRITICAL'

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

  #     - name: Push Image to Docker Hub
  #       run: docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Connect to server
        run: ssh -i ${{ secrets.PRIVATE_KEY }} ${USERNAME}@${HOST}
